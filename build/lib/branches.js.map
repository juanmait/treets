{"version":3,"sources":["../../src/lib/branches.ts"],"names":["branches","obj","reduce","acc","isLeaf","push","path","join"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAMO,MAAMA,QAAQ,GAAIC,GAAD,IACtB,qBAASA,GAAT,EAAcC,MAAd,CAAqB,UAASC,GAAT,EAAc;AACjC,MAAI,KAAKC,MAAT,EAAiB;AACfD,IAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKC,IAAL,CAAUC,IAAV,CAAe,GAAf,CAAT;AACD;;AAED,SAAOJ,GAAP;AACD,CAND,EAMG,EANH,CADK","sourcesContent":["import { traverse, GenericObj } from '../index'\n\n/**\n * return only the leaves of a tree. A leave can be of type:\n * `boolean`, `number`, `string`, `null`, `undefined`.\n *\n * @param obj a traversable object\n */\nexport const branches = (obj: GenericObj): string[] =>\n  traverse(obj).reduce(function(acc) {\n    if (this.isLeaf) {\n      acc.push(this.path.join('.'))\n    }\n\n    return acc\n  }, [])\n"],"file":"branches.js"}