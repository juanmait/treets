{"version":3,"sources":["../../src/lib/toHash.ts"],"names":["convertToHash","obj","reduce","acc","isLeaf","pathArr","path","pathStr","join","leafValue","node","push"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,aAAa,GAAIC,GAAD,IAC3B,qBAASA,GAAT,EAAcC,MAAd,CAAqB,UAASC,GAAT,EAAc;AACjC,MAAI,KAAKC,MAAT,EAAiB;AACf,UAAMC,OAAO,GAAG,KAAKC,IAArB;AACA,UAAMC,OAAO,GAAGF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAhB;AAEA,UAAMC,SAAoB,GAAG,KAAKC,IAAlC;AAEAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS,CAACJ,OAAD,EAAUE,SAAV,CAAT;AACD;;AAED,SAAON,GAAP;AACD,CAXD,EAWG,EAXH,CADK","sourcesContent":["import { traverse, GenericObj, Primitive, Hashed } from '../index'\n\nexport const convertToHash = (obj: GenericObj): Hashed =>\n  traverse(obj).reduce(function(acc) {\n    if (this.isLeaf) {\n      const pathArr = this.path\n      const pathStr = pathArr.join(':')\n\n      const leafValue: Primitive = this.node\n\n      acc.push([pathStr, leafValue])\n    }\n\n    return acc\n  }, [])\n"],"file":"toHash.js"}