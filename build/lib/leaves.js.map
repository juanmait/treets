{"version":3,"sources":["../../src/lib/leaves.ts"],"names":["leaves","obj","reduce","acc","node","isLeaf","push"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAMO,MAAMA,MAAM,GAAIC,GAAD,IACpB,qBAASA,GAAT,EAAcC,MAAd,CAAqB,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACvC,MAAI,KAAKC,MAAT,EAAiB;AACfF,IAAAA,GAAG,CAACG,IAAJ,CAASF,IAAT;AACD;;AAED,SAAOD,GAAP;AACD,CAND,EAMG,EANH,CADK","sourcesContent":["import { traverse, GenericObj, Primitive } from '../index'\n\n/**\n * return only the leaves of a tree. A leave can be of type:\n * `boolean`, `number`, `string`, `null`, `undefined`.\n *\n * @param obj a traversable object\n */\nexport const leaves = (obj: GenericObj): Primitive[] =>\n  traverse(obj).reduce(function(acc, node) {\n    if (this.isLeaf) {\n      acc.push(node)\n    }\n\n    return acc\n  }, [])\n"],"file":"leaves.js"}